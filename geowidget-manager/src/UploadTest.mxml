<?xml version="1.0" encoding="utf-8"?>
<!-- 
 *
 * Copyright (C) 2009-12 Marcus Schiesser, Gelnhausen, Germany and SaaS Web Internet Solutions GmbH, Karlsruhe, Germany
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical">
<mx:Script>
	<![CDATA[
		import ms.util.StringUtil;
		import com.adobe.images.PNGEncoder;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.events.FaultEvent;
		import mx.controls.Alert;
		import de.geowidget.manager.utils.GeoConverter;
		import mx.collections.ArrayCollection;
		import mx.rpc.Fault;
		import mx.utils.URLUtil;
		import com.google.maps.Map;
		import mx.events.IndexChangedEvent;
		import com.google.maps.services.Placemark;
		import com.adobe.serialization.json.JSON;
		import ms.util.CSVUtil;
		
		[Embed(source='/assets/logo/logo.png')]
		private const selectLogo:Class;
		
/*		private function testUpload():void {
			var file:File = new File("/Users/marcus/Documents/code/socialsites/filialfinder/src/beispieladressen.json");
			var inStream:FileStream = new FileStream();
			inStream.open( file, FileMode.READ);
			var contents:String = inStream.readUTFBytes( inStream.bytesAvailable );
			inStream.close();
			var storeObjects:Object = JSON.decode(contents);
			var bitmapData:BitmapData = (image.content as Bitmap).bitmapData;
			var bitmap:ByteArray = PNGEncoder.encode(bitmapData);
			uploadService.uploadWidget("steffen.schiesser@googlemail.com/test", "fsdÃ©", bitmap, 300, 300, storeObjects, "#bb0000");
		}
		
		private function testAuth():void {
			var window:Window = new Window();
			var openIDForm:OpenIDForm = new OpenIDForm();
			openIDForm.openID = "marcus.schiesser.myopenid.com";
			openIDForm.addEventListener(OpenIDForm.LOGIN_EVENT, function(e:Event):void {
				window.close();
				var _authWindow:AuthWindow = new AuthWindow();
				_authWindow.authURL = "http://localhost/auth/";
				_authWindow.addEventListener(AuthEvent.EVENT_AUTHENTICATE, function(event:Event):void {
					testUpload();
				});
				_authWindow.addEventListener(AuthWindow.EVENT_INVALID_ID, function(event:Event):void {
					Alert.show('Looks like an invalid OpenID. Please try again with a diffrent one.');
					window.open();
				});
				_authWindow.authenticate(openIDForm.openID);
			});
			window.addChild(openIDForm);
			window.open();
		} */
		
		private function testCSV():void {
//			CSVUtil.CSV2JSON('a;"a;b";"ab"', ['a','b','c'], ";");
			StringUtil.textSplit('a;b;"c";"""";"a;b"""', ";");
		}
		
		private function onFault(event:FaultEvent):void {
			trace(event);
		}

		private function onUploadResult(event:ResultEvent):void {
			trace(event);
			text.text = event.result as String;
		//	html.htmlText = event.result as String;
		}


	]]>
</mx:Script>
	<mx:Button label="Run" click="testCSV()"/>
	<mx:RemoteObject
    	id="uploadService"
    	requestTimeout="30"
    	destination="FilialServer"
    	source="WidgetService"
		showBusyCursor="true">
		<mx:method name="uploadWidget" fault="onFault(event)" result="onUploadResult(event)"/>
    </mx:RemoteObject>
    <mx:Image id="image" source="{selectLogo}"/>
    <mx:TabNavigator width="100%" height="100%" creationPolicy="all" >
    	<mx:Canvas label="Value">
    		<mx:Text id="text" width="100%" height="100%"/>
    	</mx:Canvas>
		<mx:Canvas label="HTML">
		 <!--   <mx:HTML id="html" width="100%" height="100%" /> -->
		</mx:Canvas>    	
    </mx:TabNavigator>
</mx:Application>
